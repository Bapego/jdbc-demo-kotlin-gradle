##Manuálisan be lehet állítani
#spring.security.user.name=bapego
#spring.security.user.password=jelszó
#spring.security.user.role=USER, ADMIN

spring.main.allow-bean-definition-overriding=true
# Elvileg ez default és menne a devtools, de nem megy :(
spring.devtools.add-properties = true

server.port=8080

##engedélyezzük, hogy a bönégészõbõl elérhessük a DB-t
#spring.h2.console.enabled=true
##Ezen az úton érjük el
#spring.h2.console.path=/db
spring.thymeleaf.cache=false
spring.mvc.locale-resolver=fixed
spring.mvc.locale=hu

spring.datasource.url=jdbc:postgresql://ec2-54-228-207-163.eu-west-1.compute.amazonaws.com:5432/dc2t9iq56kleej?ssl=true;sslfactory=org.postgresql.ssl.NonValidatingFactory
spring.datasource.username=fxgqgajrfuxoze
spring.datasource.password=6240cb79f025094cf4fc87f547e5e0d689f6e745af159e597085ec5cada3e541
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# Ezzel a sorral mûködik a 'data.sql'
spring.datasource.initialization-mode=always

#create-drop: Hozzad létre a DB-t és ha leállítjuk a DB-t, eldobja, mint a H2-n
#create: 1. indításnál,
#update: többi indításnál, csak azt módosítja ami változott
#validate: csak ellenõrzni, hogy van-e változás

# Email
mail.link = http://localhost:8080/activation/
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=probaprogramnak@gmail.com
spring.mail.password=AAalma.88
    # Other properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
    # TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=true

logging.level.com.sonrisa.barath.PeldaProject=INFO